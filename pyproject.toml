[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gLM"
version = "0.1.0"
description = "Gene Language Model - A transformer-based package for protein and gene sequence modeling"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["transformers", "protein", "gene", "language-model", "bert", "bioinformatics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "tokenizers>=0.13.0",
    "datasets>=2.10.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "wandb>=0.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]
training = [
    "accelerate>=0.20.0",
    "deepspeed>=0.9.0",
]
evaluation = [
    "evaluate>=0.4.0",
    "seqeval>=1.2.0",
]

[project.urls]
Homepage = "https://github.com/BrandesLab/HuggingfaceTransformer"
Repository = "https://github.com/BrandesLab/HuggingfaceTransformer"
Issues = "https://github.com/BrandesLab/HuggingfaceTransformer/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["gLM*"]
exclude = ["tests*", "checkpoints*", "slurm_scripts*"]

[tool.setuptools.package-data]
gLM = ["*.json", "*.txt", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | checkpoints
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["gLM"]
skip_glob = ["checkpoints/*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "checkpoints/",
    "slurm_scripts/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=gLM",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["gLM"]
omit = [
    "*/tests/*",
    "*/test_*",
    "checkpoints/*",
    "slurm_scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
